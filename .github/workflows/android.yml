name: Android Build (Capacitor)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  NODE_VERSION: 20.19.5
  PNPM_VERSION: 9

jobs:
  build-android:
    runs-on: ubuntu-latest
    # Pemetaan secrets -> env (opsional tapi rapi)
    env:
      KEYSTORE_BASE64:   ${{ secrets.KEYSTORE_BASE64 }}
      KEY_ALIAS:         ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD:      ${{ secrets.KEY_PASSWORD }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: webwallet/pnpm-lock.yaml

      - name: Cleanup workspace files
        run: |
          rm -f pnpm-workspace.yaml || true
          rm -f webwallet/pnpm-workspace.yaml || true

      - name: Install deps (webwallet only)
        working-directory: webwallet
        run: pnpm install --frozen-lockfile=false

      - name: Build web
        working-directory: webwallet
        run: pnpm build

      - name: Capacitor sync (Android)
        working-directory: webwallet
        run: pnpm cap sync android

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        working-directory: webwallet/android
        run: chmod +x gradlew

      # ==== Signing (Release) ====
      - name: Check keystore secret present
        id: has_keystore
        run: |
          if [ -n "${KEYSTORE_BASE64:-}" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Decode keystore
        if: steps.has_keystore.outputs.present == 'true'
        run: |
          set -euo pipefail
          mkdir -p webwallet/android/app
          # bersihkan CRLF/spasi lalu decode
          printf '%s' "${KEYSTORE_BASE64}" | tr -d '\r\n ' | base64 -d -i > webwallet/android/app/keystore.jks
          # verifikasi cepat
          keytool -list -keystore webwallet/android/app/keystore.jks -storepass "${KEYSTORE_PASSWORD}" >/dev/null 2>&1

      - name: Configure signing
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        run: |
          {
            # ⬇️ path yang benar RELATIF ke module app/
            echo "MY_KEYSTORE_FILE=keystore.jks"
            echo "MY_KEY_ALIAS=${KEY_ALIAS}"
            echo "MY_KEY_PASSWORD=${KEY_PASSWORD}"
            echo "MY_STORE_PASSWORD=${KEYSTORE_PASSWORD}"
          } >> gradle.properties

      - name: Sanity check keystore & props
        if: steps.has_keystore.outputs.present == 'true'
        run: |
          set -e
          ls -la webwallet/android/app/keystore.jks
          echo "Gradle properties (filtered):"
          grep -E 'MY_KEYSTORE_FILE|MY_KEY_ALIAS' webwallet/android/gradle.properties || true
          # Tampilkan konfigurasi signing Gradle
          (cd webwallet/android && ./gradlew :app:signingReport)

      # ==== Build ====
      - name: Build APK (debug)
        working-directory: webwallet/android
        run: ./gradlew assembleDebug --warning-mode=all --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-debug-apk
          path: webwallet/android/app/build/outputs/apk/debug/app-debug.apk

      - name: Build APK (release)
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        run: ./gradlew assembleRelease --warning-mode=all --stacktrace

      - name: Upload release APK
        if: steps.has_keystore.outputs.present == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-release-apk
          path: webwallet/android/app/build/outputs/apk/release/app-release.apk

      - name: Build AAB (release)  # opsional
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        run: ./gradlew bundleRelease --warning-mode=all --stacktrace

      - name: Upload release AAB
        if: steps.has_keystore.outputs.present == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-release-aab
          path: webwallet/android/app/build/outputs/bundle/release/app-release.aab
