name: Android Build (Capacitor)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  NODE_VERSION: 20.19.5
  PNPM_VERSION: 9

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node (with pnpm cache)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
          cache-dependency-path: webwallet/pnpm-lock.yaml

      - name: Cleanup workspace files (avoid pnpm workspace confusion)
        run: |
          rm -f pnpm-workspace.yaml || true
          rm -f webwallet/pnpm-workspace.yaml || true

      - name: Install deps (webwallet only)
        working-directory: webwallet
        run: pnpm install --frozen-lockfile=false

      - name: Build web
        working-directory: webwallet
        run: pnpm build

      - name: Capacitor sync (Android)
        working-directory: webwallet
        run: pnpm cap sync android

      # Toolchain: cocok dengan konfigurasi project (Java/Kotlin target 17)
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Ensure gradlew is executable
        working-directory: webwallet/android
        run: chmod +x gradlew

      - name: Normalize gradlew line endings (just in case)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y dos2unix
          dos2unix webwallet/android/gradlew

      # ---------- RELEASE SIGNING (opsional) ----------
      - name: Check keystore secret
        id: has_keystore
        run: |
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Decode keystore → android/app/keystore.jks
        if: steps.has_keystore.outputs.present == 'true'
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          set -euo pipefail
          mkdir -p webwallet/android/app
          # Bersihkan header/footer dan CRLF/spasi → hindari "base64: invalid input"
          printf '%s' "${KEYSTORE_BASE64}" \
            | sed -E 's/-----BEGIN[^-]*-----//g; s/-----END[^-]*-----//g' \
            | tr -d '\r\n ' \
            | base64 -d -i > webwallet/android/app/keystore.jks

          # Verifikasi storepass (tidak menampilkan detail)
          keytool -list -keystore webwallet/android/app/keystore.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" >/dev/null

      - name: Write gradle.properties for release signing
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          {
            echo "MY_KEYSTORE_FILE=app/keystore.jks"   # penting: path relatif dari /android
            echo "MY_KEY_ALIAS=${KEY_ALIAS}"
            echo "MY_KEY_PASSWORD=${KEY_PASSWORD}"
            echo "MY_STORE_PASSWORD=${KEYSTORE_PASSWORD}"
          } >> gradle.properties
          echo "== gradle.properties (redacted) =="
          grep -v PASSWORD gradle.properties || true

      # ---------- BUILD DEBUG ----------
      - name: Build APK (debug)
        working-directory: webwallet/android
        run: ./gradlew assembleDebug --warning-mode=all --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-debug-apk
          path: webwallet/android/app/build/outputs/apk/debug/app-debug.apk

      # ---------- BUILD RELEASE ----------
      - name: Build APK (release)
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        run: ./gradlew assembleRelease --warning-mode=all --stacktrace

      - name: Upload release APK
        if: steps.has_keystore.outputs.present == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-release-apk
          path: webwallet/android/app/build/outputs/apk/release/app-release.apk

      - name: Build AAB (release)  # opsional
        if: steps.has_keystore.outputs.present == 'true'
        working-directory: webwallet/android
        run: ./gradlew bundleRelease --warning-mode=all --stacktrace

      - name: Upload release AAB
        if: steps.has_keystore.outputs.present == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: safeid-wallet-release-aab
          path: webwallet/android/app/build/outputs/bundle/release/app-release.aab
